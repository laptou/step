{
  "extends": [
    "google",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json"
  },
  "plugins": [
    "@typescript-eslint",
    "jsdoc"
  ],
  "rules": {
    "@typescript-eslint/explicit-function-return-type": [
      "off"
    ],
    "@typescript-eslint/no-var-requires": [
      "off"
    ],
    "@typescript-eslint/no-non-null-assertion": [
      "off"
    ],
    "@typescript-eslint/no-explicit-any": [
      "off"
    ],
    "@typescript-eslint/member-ordering": [
      "error",
      {
        "default": [
          // Index signature
          "signature",
          // Static
          "private-static-field",
          "protected-static-field",
          "public-static-field",
          "private-static-method",
          "protected-static-method",
          "public-static-method",
          "private-instance-field",
          "protected-instance-field",
          "public-instance-field",
          // Constructors
          "private-constructor",
          "protected-constructor",
          "public-constructor",
          // Methods
          "private-instance-method",
          "protected-instance-method",
          "public-instance-method",
          // Abstract
          "private-abstract-field",
          "protected-abstract-field",
          "public-abstract-field",
          "private-abstract-method",
          "protected-abstract-method",
          "public-abstract-method"
        ]
      }
    ],
    "@typescript-eslint/explicit-member-accessibility": [
      "warn",
      {
        "accessibility": "explicit"
      }
    ],
    "@typescript-eslint/prefer-readonly": [
      "warn"
    ],
    "@typescript-eslint/unbound-method": [
      "warn"
    ],
    "@typescript-eslint/no-unused-vars": [
      "warn",
      {
        "vars": "all",
        "varsIgnorePattern": "Surplus",
        "args": "after-used",
        "ignoreRestSiblings": true
      }
    ],
    "@typescript-eslint/indent": [
      "error",
      2,
      {
        "ignoredNodes": [
          "JSXElement *",
          "JSXElement",
          "TemplateLiteral *"
        ]
      }
    ],
    "@typescript-eslint/no-unsafe-member-access": [
      "warn"
    ],
    "@typescript-eslint/no-unsafe-assignment": [
      "warn"
    ],
    "@typescript-eslint/no-unsafe-return": [
      "warn"
    ],
    "@typescript-eslint/no-unsafe-call": [
      "warn"
    ],
    "valid-jsdoc": [
      "off"
    ],
    "require-jsdoc": [
      "off"
    ],
    "jsdoc/check-alignment": [
      "warn"
    ], // Recommended
    "jsdoc/check-indentation": [
      "warn"
    ],
    "jsdoc/check-param-names": [
      "off",
      {
        // "checkTypesPattern": ""
      }
    ], // Recommended
    "jsdoc/check-tag-names": [
      "warn"
    ], // Recommended
    "jsdoc/check-types": [
      "warn"
    ], // Recommended
    "jsdoc/implements-on-classes": [
      "warn"
    ], // Recommended
    "jsdoc/newline-after-description": [
      "warn"
    ], // Recommended
    "jsdoc/no-types": [
      "warn"
    ],
    "jsdoc/no-undefined-types": [
      "warn"
    ], // Recommended
    "jsdoc/require-description": [
      "warn",
      {
        "checkConstructors": false,
        "checkGetters": false,
        "checkSetters": false
      }
    ],
    "jsdoc/require-jsdoc": [
      "warn",
      {
        "publicOnly": true
      }
    ], // Recommended
    "jsdoc/require-param": [
      "warn",
      {
        "checkDestructured": false
      }
    ], // Recommended
    "jsdoc/require-param-description": [
      "warn"
    ], // Recommended
    "jsdoc/require-param-name": [
      "warn"
    ], // Recommended
    "jsdoc/require-returns": [
      "warn"
    ], // Recommended
    "jsdoc/require-returns-check": [
      "warn"
    ], // Recommended
    "jsdoc/require-returns-description": [
      "warn"
    ], // Recommended
    "jsdoc/valid-types": [
      "warn"
    ], // Recommended
    "new-cap": [
      "off"
    ],
    // handled by TS indent rule
    "indent": [
      "off"
    ],
    "max-len": [
      "warn",
      {
        "code": 80
      }
    ]
  },
  "settings": {
    "jsdoc": {
      "mode": "typescript"
    }
  }
}
